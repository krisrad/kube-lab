AWSTemplateFormatVersion: '2010-09-09'
Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      -
        Label:
          default: VPC
        Parameters:
          - vpcCIDR
          - az
          - azPublicSubnetCIDR
          - keypair
    ParameterLabels:
      vpcCIDR:
        default: VPC CIDR
      az:
        default: Availability Zone
      azPublicSubnetCIDR:
        default: Public Subnet CIDR
      keypair:
        default: Key Pair
Parameters:
  vpcCIDR:
    Type: String
    MinLength: 9
    MaxLength: 18
    AllowedPattern: "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})"
    ConstraintDescription: Must be a valid CIDR range in the form x.x.x.x/16
    Default: 10.100.0.0/16
  az:
    Type: "AWS::EC2::AvailabilityZone::Name"
    Default: "us-east-1a"
  azPublicSubnetCIDR:
    Type: String
    MinLength: 9
    MaxLength: 18
    AllowedPattern: "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})"
    ConstraintDescription: Must be a valid CIDR range in the form x.x.x.x/24
    Default: 10.100.1.0/24
  keypair:
    Type: "AWS::EC2::KeyPair::KeyName"
    Description: "Name of an existing EC2 KeyPair to enable SSH access to the instance"
    ConstraintDescription : "must be the name of an existing EC2 KeyPair."
    Default: "DDBCourse"
  remoteaccessIp:
    Type: String
    MinLength: 9
    MaxLength: 18
    AllowedPattern: "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})"
    ConstraintDescription: Must be a valid IP address in the form x.x.x.x/32
    Default: 115.249.63.129/32
Resources:
  VPC:
    Type: "AWS::EC2::VPC"
    Properties:
      CidrBlock: !Ref vpcCIDR
      EnableDnsSupport: true
      EnableDnsHostnames: true
      InstanceTenancy: "default"
      Tags:
      - Key: Name
        Value: !Join ["", [!Ref "AWS::StackName", "-", "VPC"]]
  IGW:
    Type: "AWS::EC2::InternetGateway"
    Properties:
      Tags:
      - Key: Name
        Value: !Join ["", [!Ref "AWS::StackName", "-", "IGW"]]
  GatewayAttach:
    Type: "AWS::EC2::VPCGatewayAttachment"
    Properties:
      InternetGatewayId: !Ref IGW
      VpcId: !Ref VPC
  pubsub:
    Type: "AWS::EC2::Subnet"
    Properties:
      AvailabilityZone: !Ref az
      CidrBlock: !Ref azPublicSubnetCIDR
      MapPublicIpOnLaunch: true
      VpcId: !Ref VPC
      Tags:
      - Key: Name
        Value: !Join ["-", [!Ref "AWS::StackName", "public", "subnet"]]
  pubsubrt:
    Type: "AWS::EC2::RouteTable"
    Properties:
      VpcId: !Ref VPC
      Tags:
      - Key: Name
        Value: !Join ["-", [!Ref "AWS::StackName", "public", "route table"]]
  pubsubpubroute:
    Type: "AWS::EC2::Route"
    DependsOn: GatewayAttach
    Properties:
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref IGW
      RouteTableId: !Ref pubsubrt
  pubsubrta:
    Type: "AWS::EC2::SubnetRouteTableAssociation"
    Properties:
      RouteTableId: !Ref pubsubrt
      SubnetId: !Ref pubsub
  secGroupBase:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow SSH access
      VpcId: !Ref VPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: '22'
          ToPort: '22'
          CidrIp: !Ref remoteaccessIp
          Description: Allow SSH access from work computer
        - IpProtocol: tcp
          FromPort: '80'
          ToPort: '80'
          CidrIp: !Ref remoteaccessIp
          Description: Allow HTTP access from work computer
      Tags:
        - Key: Name
          Value: !Join ["-", [!Ref "AWS::StackName", "sec", "grp", "kube", "master"]]
  secGroupIngress:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      GroupId: !GetAtt secGroupBase.GroupId
      IpProtocol: -1
      FromPort: 0
      ToPort: 65535
      SourceSecurityGroupId: !GetAtt secGroupBase.GroupId
      Description: Allow all access from other hosts within this security group
Outputs:
  pubsubid:
    Description: public Subnet id
    Value: !Ref pubsub
    Export:
      Name: kubelab-basinfra-pubsubid
  keypairid:
    Description: key Pair id
    Value: !Ref keypair
    Export:
      Name: kubelab-basinfra-keypairid
  secGroupBase:
    Description: Security group id
    Value: !Ref secGroupBase
    Export:
      Name: kubelab-basinfra-secGroupBase
